# This is an **example** API to demonstrate features of OpenAPI specification.
# It doesn't cover all OpenAPI features. For more full example check out: https://github.com/APIs-guru/petstore_extended

openapi: 3.0.0
info:
  version: '1.0.0' # Your API version
  # It can be any string but it is better to use semantic versioning: http://semver.org/
  # Warning: OpenAPI require version to be string, but without quotation YAML can recognize it as number.
  
  title: Spark NLP server # Replace with your API title
  # Keep it simple. Don't add "API" or version at the end of the string.

  termsOfService: 'https://www.johnsnowlabs.com/terms-of-service' # [Optional] Replace with an URL to your ToS
  contact:
    email: info@johnsnowlabs.com # [Optional] Replace with your contact email
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  x-logo:
    url: 'https://nlp.johnsnowlabs.com/assets/images/logo.png'
  
  # Describe your API here, you can use GFM (https://guides.github.com/features/mastering-markdown) here
  description: |
    This is the list or REST API end points available to interact with Spark NLP server.
    # Introduction
    [Spark NLP](https://nlp.johnsnowlabs.com/)
    is built on top of Apache Spark 2.4.0 and such is the **only** supported release. it is recommended to have basic knowledge of the Spark framework and a working environment before using Spark NLP. However, the purpose of Spark NLP server is to provide an easy to use API end point to run pre trained ML pipelines on top of Spark NLP without the need to setup any Spark infrastructure.
    
      For a list of available pipeline checkout the [link](https://nlp.johnsnowlabs.com/docs/en/pipelines)
externalDocs:
  description: Checkout Spark NLP website.
  url: 'https://nlp.johnsnowlabs.com'

# A list of tags used by the specification with additional metadata.
# The order of the tags can be used to reflect on their order by the parsing tools.
tags:
  - name: Pipeline
    description: List all supported pipeline with example text and a description
  - name: Run
    description: Runs a given pipeline 
  - name: Refresh
    description: Reloades the in memory pipeline with the latest copy publisehed on S3.
servers:
  - url: 'http://51.15.249.107:9000'

# Holds the relative paths to the individual endpoints. The path is appended to the
# basePath in order to construct the full URL. 
paths:
  /getPipeline: # path parameter in curly braces
    get: # documentation for GET operation for this path
      tags:
        - Pipeline
      
      # summary is up to 120 symbold but we recommend to be shortest as possible
      summary: Get list of pipeline
      
      # you can use GFM in operation description too: https://guides.github.com/features/mastering-markdown
      description: |
        Provide a json with details of all the pipeline supported on the server along with examples and description of the pipeline.
      
      # operationId should be unique across the whole specification
      operationId: getUserByName
      responses: # list of responses
        '200':
          description: Success
          content:
            application/json: # operation response mime type
              schema: # response schema can be specified for each response
                $ref: '#/components/schemas/Pipeline'
        '400':
          description: The request contains bad syntax or cannot be fulfilled.
  /refresh/{name}: # path parameter in curly braces
    get: # documentation for GET operation for this path
      tags:
        - Refresh
      
      # summary is up to 120 symbold but we recommend to be shortest as possible
      summary: Reload a pipeline
      
      # you can use GFM in operation description too: https://guides.github.com/features/mastering-markdown
      description: |
        Reloads the provided pipeline in memory from the latest model in S3.
      
      # operationId should be unique across the whole specification
      operationId: refreshPipeline
      parameters:
        - in: path
          name: name
          description: name of the pipeline
          example: 'explain_document_dl'
          required: true
          schema:
            $ref: '#/components/schemas/name' 
      responses: # list of responses
        '200':
          description: Success
          content:
            text/plain: # operation response mime type
              schema: # response schema can be specified for each response
                type: string
                example: 'Done'
        '400':
          description: The request contains bad syntax or cannot be fulfilled
        '404':
          description: The pipeline do not exist
  /run: # path parameter in curly braces
    post: # documentation for POST operation for this path
      tags:
        - Run
      summary: Run the pipeline
      description: run the pipeline provided on the given text.
      operationId: run
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
              examples:
                response:
                  value: Hello world!
            application/xml:
              schema:
                type: string
            text/csv:
              schema:
                type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/runResponse'
        description: Run the pipeline
        required: true
        
# An object to hold reusable parts that can be used across the spec
components:
  schemas:
    runResponse:
      type: object
      properties:
        pipeline:
          $ref: '#/components/schemas/name'
        Language:
          $ref: '#/components/schemas/lang'
        FullText:
          description: example text
          type: string
          example: David would love to visit many beautful cities wth you. He lives in an amazing country. He lives in Spain.
        
    Pipeline: 
      type: object
      properties:
        name:
          $ref: '#/components/schemas/name'
        display_name:
          description: name of the pipeline
          type: string
          example: Explain document using Deep Learning
        lang:
          $ref: '#/components/schemas/lang'
        desc:
          description: Description of the pipeline
          type: string
          example: This pipeline is an extensive <b>Deep Learning</b> based pipeline to apply multiple NLP stages on the provided text.
        cat:
          description: Description of the pipeline
          type: string
          example: Document Analysis.
        annotator:
          description: List of annotator tag present in response
          type: array
          items:
            type: string
          example:
            - tokken
            - stem
            - lemma
            - pos
            - ner
            - sentence
            - checked
            - entities
        examples:
          description: example sample to test the pipeline
          type: array
          items:
            type: string
          example:
            - David would love to visit many beautful cities wth you. He lives in an amazing country. He lives in Spain.
            - The European Union is a political and economc union of 28 member states that are located primarily in Europe.
    name:
      description: name of the pipeline
      type: string
      example: explain_document_dl
    lang: 
      description: language for the ml model
      type: string
      example: en
